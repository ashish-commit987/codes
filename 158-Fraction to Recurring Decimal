class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        if(numerator==0) return "0";
        StringBuilder result=new StringBuilder();
        if((numerator<0)^(denominator<0)){
            result.append("-");
        }
        long dividend=Math.abs((long)numerator);
        long divisor=Math.abs((long)denominator);
        result.append(dividend/divisor);
        long remainder=dividend%divisor;
        if(remainder==0) return result.toString();
        result.append(".");
        Map<Long,Integer> map=new HashMap<>();
        while(remainder!=0){
            if(map.containsKey(remainder)){
                int index=map.get(remainder);
                result.insert(index,"(");
                result.append(")");
                break;
            }
            map.put(remainder,result.length());
            remainder=remainder*10;
            result.append(remainder/divisor);
            remainder=remainder%divisor;
        }
        return result.toString();
    }
}
https://leetcode.com/problems/fraction-to-recurring-decimal/?envType=daily-question&envId=2025-09-24
