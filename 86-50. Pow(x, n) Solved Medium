class Solution {
    public double myPow(double x, int n) {
        return Pow(x,n);
    }
    private double Pow(double x,int n){
        if(n==0) return 1;
        if(n==1) return x;
        if (n == Integer.MIN_VALUE) {
            // We cannot negate Integer.MIN_VALUE safely
            x = x * x;
            n = n / 2;
        }

        if(n<0){
            n=-1*n;
            x=1/x;
        }
        if(n%2==1){
            return x*(Pow(x,n-1));
        }
        else{
            double half=Pow(x,n/2);
            return half*half;
        }
    }
}
https://leetcode.com/problems/powx-n/
