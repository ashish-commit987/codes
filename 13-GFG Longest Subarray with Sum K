// class Solution {
//     public int longestSubarray(int[] arr, int k) {
//         // code here
        
//         int maxsum=0;
//         int result=0;
//         int n=arr.length;
//         for(int i=0;i<n-1;i++){
//             int sum=0;
//             //sum=sum+arr[i];
//             for(int j=i;j<n;j++){
//                 sum=sum+arr[j];
//                 if(sum==k){
//                     maxsum=j-i+1;
//                     result=Math.max(result,maxsum);
//                 }
//             }
//         }
//         return result;
//     }
// }

// optimize solution 

class Solution {
    public int longestSubarray(int[] arr, int k) {
        // code here
       HashMap<Long,Integer> map=new HashMap<>();
       long sum=0;
       int maxsum=0;
       for(int i=0;i<arr.length;i++){
           sum=sum+arr[i];
           
           if(sum==k){
             maxsum=Math.max(maxsum,i+1);  
           }
           
           long rem=sum-k;
           
           if(map.containsKey(rem)){
               int len=i-map.get(rem);
               maxsum=Math.max(maxsum,len);
           }
           
           else if(!map.containsKey(sum)){
               map.put(sum,i);
           }
       }
       return maxsum;
    }
}

https://www.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1
