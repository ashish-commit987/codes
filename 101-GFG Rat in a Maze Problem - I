class Solution {
    // Function to find all possible paths
    public ArrayList<String> ratInMaze(int[][] maze) {
        // code here
        ArrayList<String> ans=new ArrayList<>();
        int n=maze.length;
        int vis[][]=new int[n][n];

        if(maze[0][0]==1){
            Vmove(0,0,maze,n,ans,"",vis);
        }
        return ans;
    }
    void Vmove(int i,int j,int m[][],int n,ArrayList<String> ans,String move,int vis[][]){
        if(i==n-1 && j==n-1){
            ans.add(move);
            return;
        }
        
        if(i+1<n && vis[i+1][j]==0 && m[i+1][j]==1){
            vis[i][j]=1;
            Vmove(i+1,j,m,n,ans,move+'D',vis);
            vis[i][j]=0;
        }
        
        if(j-1>=0 && vis[i][j-1]==0 && m[i][j-1]==1){
            vis[i][j]=1;
            Vmove(i,j-1,m,n,ans,move+'L',vis);
            vis[i][j]=0;
        }
        
        if(j+1<n && vis[i][j+1]==0 && m[i][j+1]==1){
            vis[i][j]=1;
            Vmove(i,j+1,m,n,ans,move+'R',vis);
            vis[i][j]=0;
        }
        
        if(i-1>=0 && vis[i-1][j]==0 && m[i-1][j]==1){
            vis[i][j]=1;
            Vmove(i-1,j,m,n,ans,move+'U',vis);
            vis[i][j]=0;
        }
        
    }
}
https://www.geeksforgeeks.org/problems/rat-in-a-maze-problem/1
