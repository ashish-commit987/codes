/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
}
*/

class Solution {
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static class Pair{
        Node node;
        int hd;
        Pair(Node n, int h){
            this.node=n;
            this.hd=h;
        }
    }
    static ArrayList<Integer> topView(Node root) {
        // code here
        ArrayList<Integer> result=new ArrayList<>();
        if(root==null) return result;
        int minHd=0,maxHd=0;
        Queue<Pair> queue=new LinkedList<>();
        queue.offer(new Pair(root,0));
        Map<Integer,Integer> map=new HashMap<>();
        while(!queue.isEmpty()){
            Pair p=queue.poll();
            int hd=p.hd;
            Node node=p.node;
            if(!map.containsKey(hd)){
                map.put(hd,node.data);
            }
            if(node.left!=null) queue.offer(new Pair(node.left,hd-1));
            if(node.right!=null) queue.offer(new Pair(node.right,hd+1));
            minHd=Math.min(minHd,hd);
            maxHd=Math.max(maxHd,hd);
        }
        for(int i=minHd;i<=maxHd;i++){
            result.add(map.get(i));
        }
        return result;
    }
}
https://www.geeksforgeeks.org/problems/top-view-of-binary-tree/1
