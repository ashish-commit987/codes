// class Solution {
//     public int longestConsecutive(int[] nums) {
//         Arrays.sort(nums);
//         int count=1;
//         int max=1;
//         if (nums.length == 0){
//             return 0;
//         }
         
//         else{
//             for(int i=0;i<nums.length-1;i++){
//                 if(nums[i+1]==nums[i]){
//                     continue;
//                 }
//             else if(nums[i+1]==nums[i]+1){
//                 count++;
//             }
//             else{
//                 max=Math.max(max,count);
//                 count=1;
//             }
//         }
//         }
//         max=Math.max(max,count);
//         return max;
//     }
// }

// Optimal solution
class Solution {
    public int longestConsecutive(int[] nums) {
        HashSet<Integer> set=new HashSet<>();
        for(int num:nums){
            set.add(num);
        }
        int max=0;
        for(int num:set){
            if(!set.contains(num-1)){
                int setnum=num;
                int count=1;

                while(set.contains(setnum+1)){
                    count++;
                    setnum++;
                }
                max=Math.max(max,count);
            }
            
        }
        return max;
    }
}

https://leetcode.com/problems/longest-consecutive-sequence/
