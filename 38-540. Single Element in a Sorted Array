class Solution {
    public int singleNonDuplicate(int[] nums) {
        int start=1;
        int end=nums.length-2;
        if(nums.length==1){
            return nums[0];
        }
        else{
            if(nums[0]!=nums[1]){
                return nums[0];
            }
            else if(nums[nums.length-1]!=nums[nums.length-2]){
                return nums[nums.length-1];
            }
            else{
                while(start<=end){
                    int mid=start+(end-start)/2;
                    if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1]){
                        return nums[mid];
                    }
                    else{
                        if(mid%2==0){
                            if(nums[mid-1]==nums[mid]){
                                //condition of odd-even i.e, neglect right
                                end=mid-1;
                            }
                            else if(nums[mid+1]==nums[mid]){
                                //condition of even-odd i.e, neglect left
                                start=mid+1;
                            }
                        }
                        else{
                            if(nums[mid-1]==nums[mid]){
                                //condition of eeven-odd i.e, neglect left
                                start=mid+1;
                            }
                            else if(nums[mid+1]==nums[mid]){
                                //condition of odd-even i.e, neglect right
                                end=mid-1;
                            }
                        }
                    }
                }
            }
        }
        return -1;
    }
}

https://leetcode.com/problems/single-element-in-a-sorted-array/
