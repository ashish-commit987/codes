// class Solution {
//     public int subarraySum(int[] nums, int k) {
//         //int sum=0;
//         int count=0;
//         for(int i=0;i<nums.length;i++){
//             int sum=0;
//             for(int j=i;j<nums.length;j++){
//                 sum=sum+nums[j];
//                 if(sum==k){
//                     count++;
//                 }
//                 if(sum>k){
//                     j++;
//                 }
//             }
//         }
//         return count;
//     }
// } 

//Optimal solution

class Solution {
    public int subarraySum(int[] nums, int k) {
        HashMap<Integer,Integer> map=new HashMap<>();
        map.put(0,1);
        int presum=0;
        int count=0;
        for(int i=0;i<nums.length;i++){
            presum=presum+nums[i];

            int rem=presum-k;
            count=count+map.getOrDefault(rem,0);
            map.put(presum,map.getOrDefault(presum,0)+1);
        }
        return count;
    }
}

https://leetcode.com/problems/subarray-sum-equals-k/
